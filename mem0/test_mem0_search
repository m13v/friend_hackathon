from mem0 import Memory
import os
from dotenv import load_dotenv
import sys

load_dotenv()

def search_memories(query, user_id):
    memory = Memory()
    related_memories = memory.search(query=query, user_id=user_id)
    return related_memories

if __name__ == "__main__":
    if not os.getenv('OPENAI_API_KEY'):
        print("OPENAI_API_KEY is not set. Please set it in your .env file.")
        sys.exit(1)

    if len(sys.argv) != 3:
        print("Usage: python search_memories.py <query> <user_id>")
        sys.exit(1)

    query = sys.argv[1]
    user_id = sys.argv[2]

    results = search_memories(query, user_id)
    print("results=",results)
    # if results:
    #     print(f"Found {len(results)} related memories:")
    #     print_memories(results)
    # else:
    #     print("No related memories found.")


# def print_memories(memories):
#     for i, mem in enumerate(memories, 1):
#         print(f"Memory {i}:")
#         print(f"  ID: {mem['id']}")
#         print(f"  Text: {mem['text']}")
#         print(f"  Score: {mem['score']}")
#         print(f"  Metadata: {mem['metadata']}")
#         print("-" * 50)
